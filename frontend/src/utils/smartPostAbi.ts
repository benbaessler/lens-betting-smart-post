export const smartPostAbi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "lensHubProxyContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleRegistryContract",
        type: "address",
      },
      { internalType: "address", name: "moduleOwner", type: "address" },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "BetAlreadyActive", type: "error" },
  { inputs: [], name: "BetAlreadyFinalized", type: "error" },
  { inputs: [], name: "BetExpired", type: "error" },
  { inputs: [], name: "BetNotActive", type: "error" },
  { inputs: [], name: "BetNotExpired", type: "error" },
  { inputs: [], name: "BetNotStaked", type: "error" },
  { inputs: [], name: "CurrencyNotWhitelisted", type: "error" },
  { inputs: [], name: "DeadlineInPast", type: "error" },
  { inputs: [], name: "InvalidCaller", type: "error" },
  { inputs: [], name: "InvalidJuror", type: "error" },
  { inputs: [], name: "InvalidOutcome", type: "error" },
  { inputs: [], name: "NotHub", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "challengedProfileId",
        type: "uint256",
      },
    ],
    name: "BetActivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "creatorId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "userId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "jurorId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "BetCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "outcome",
        type: "uint256",
      },
    ],
    name: "BetFinalized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "pubId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "BetStaked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LENS_HUB",
    outputs: [{ internalType: "contract ILensHub", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MODULE_REGISTRY",
    outputs: [
      { internalType: "contract IModuleRegistry", name: "", type: "address" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "profileId", type: "uint256" },
      { internalType: "uint256", name: "pubId", type: "uint256" },
    ],
    name: "bets",
    outputs: [
      { internalType: "uint256", name: "creatorId", type: "uint256" },
      { internalType: "uint256", name: "userId", type: "uint256" },
      { internalType: "uint256", name: "jurorId", type: "uint256" },
      { internalType: "address", name: "currency", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
      { internalType: "uint256", name: "deadline", type: "uint256" },
      { internalType: "bool", name: "staked", type: "bool" },
      { internalType: "bool", name: "active", type: "bool" },
      { internalType: "uint256", name: "outcome", type: "uint256" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "pubId", type: "uint256" },
      { internalType: "uint256", name: "profileId", type: "uint256" },
      { internalType: "uint256", name: "outcome", type: "uint256" },
    ],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getModuleMetadataURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "profileId", type: "uint256" },
      { internalType: "uint256", name: "pubId", type: "uint256" },
      { internalType: "address", name: "", type: "address" },
      { internalType: "bytes", name: "data", type: "bytes" },
    ],
    name: "initializePublicationAction",
    outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataURI",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "publicationActedProfileId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "publicationActedId",
            type: "uint256",
          },
          { internalType: "uint256", name: "actorProfileId", type: "uint256" },
          {
            internalType: "address",
            name: "actorProfileOwner",
            type: "address",
          },
          {
            internalType: "address",
            name: "transactionExecutor",
            type: "address",
          },
          {
            internalType: "uint256[]",
            name: "referrerProfileIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "referrerPubIds",
            type: "uint256[]",
          },
          {
            internalType: "enum Types.PublicationType[]",
            name: "referrerPubTypes",
            type: "uint8[]",
          },
          { internalType: "bytes", name: "actionModuleData", type: "bytes" },
        ],
        internalType: "struct Types.ProcessActionParams",
        name: "params",
        type: "tuple",
      },
    ],
    name: "processPublicationAction",
    outputs: [{ internalType: "bytes", name: "", type: "bytes" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "string", name: "_metadataURI", type: "string" }],
    name: "setModuleMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "pubId", type: "uint256" },
      { internalType: "uint256", name: "profileId", type: "uint256" },
    ],
    name: "stake",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "bytes4", name: "interfaceID", type: "bytes4" }],
    name: "supportsInterface",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
